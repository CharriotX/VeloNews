@using VeloNews.Models.NewsViewModels;
@using VeloNews.Services.IServices;

@model ShowNewsViewModel
@inject IAuthenticationService authService;

@section Styles {
    <link href="~/css/news.css?v=2" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/trix@2.0.0/dist/trix.css">

}
@section Scripts {
    <script type="text/javascript" src="https://unpkg.com/trix@2.0.0/dist/trix.umd.min.js"></script>
    <script src="~/js/news/showNews.js"></script>
}

<div class="show-news">
    <div class="news-block">
        <div class="news-content">
            <div class="show-news-author">Created by @Model.Author, @Model.CreatedTime.AddDays(-1).ToString("dd-MM-yyyy, HH:mm")</div>
            <div class="show-news-title">@Model.Title</div>
            <div class="show-news-text">@Html.Raw(Model.ShortText)</div>
            <div class="show-news-image-block">
                @foreach (var image in Model.NewsUrlsImages)
                {
                    <img class="show-news-image" src="@image.Url" />
                }
            </div>
            <div class="show-news-text">@Html.Raw(Model.Text)</div>
        </div>
        <div id="comment-anchor" class="back-btn"><a href="/News/Index">Back to news</a></div>
        <div class="comment-block">
            @if (authService.GetCurrentUser() == null)
            {
                <div class="unauthorized-user">
                    <a href="/User/Login">Войдите</a> или <a href="/User/Registration/">зарегиструйтесь</a> чтобы оставить комментарий.
                </div>
            }
            else
            {
                <div class="comment-input">
                    <form>
                        <input class="comment-id-form" type="hidden" value="0" />
                        <input class="news-id" type="hidden" name="NewsId" value="@Model.Id" />
                        <h3 class="comment-head">Add comment:</h3>
                        <div class="trix-editor">
                            <input id="comment-field" name="Text" type="hidden" />
                            <trix-editor input="comment-field" trix-file-accept="preventDefault"></trix-editor>
                        </div>
                        <div class="comment-input-submit">
                            <input type="button" value="Send" />
                        </div>
                    </form>
                </div>
            }
            <div class="comment-list">
                <div class="comment-item template">
                    <div class="comment-item-avatar">
                        <img src="" />
                    </div>
                    <div class="comment-item-text">
                        <div class="item-text-username">
                            <div class="username-info">
                                <div class="text-username-nick"></div>
                                <div class="text-username-date"></div>
                            </div>
                        </div>
                        <div class="item-text-field">
                        </div>
                    </div>
                </div>
                @foreach (var comment in Model.NewsComments)
                {
                    <div class="comment-item" data="@comment.Id">
                        <input name="commentId" hidden value="@comment.Id" />
                        <div class="comment-item-avatar">
                            <img src="@comment.AuthorAvatarUrl">
                        </div>
                        <div class="comment-item-text">
                            <div class="item-text-username">
                                <div class="username-info">
                                    <div class="text-username-nick">@comment.UserName</div>
                                    <div class="text-username-date">@comment.CreatedTime.ToString("dd-MM-yyyy, HH:mm")</div>
                                </div>

                                <div class="comment-actions">
                                    @if (authService.IsAdmin() || authService.GetCurrentUser() == authService.GetUserByName(comment.UserName))
                                    {
                                        <a href="#comment-anchor" class="remove-comment">Удалить</a>
                                        <a href="#comment-anchor" class="edit-comment">Редактировать</a>
                                    }
                                </div>
                            </div>
                            <div class="item-text-field">
                                @Html.Raw(comment.Text)
                            </div>
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>



</div>